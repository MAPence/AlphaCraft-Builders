<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contractor Calendar</title>
    <style>


        



    </style>
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.0/main.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/dash.css" />
</head>

@model ACB.Models.ContractorVM
@{
    var jobs = Model.Jobs;
}

<body>

    <div class="px-4">
        <div class="calendar-container" >
            <h1>Work Schedule</h1>
            <div id="calendar"></div>
            <form id="eventForm">
                <label for="eventName">Event Name:</label>
                <input type="text" id="eventName" name="eventName" required>
                <label for="eventDate">Event Date:</label>
                <input type="date" id="eventDate" name="eventDate" required>
                <button type="button" id="addEventButton">Add Event</button>
            </form>
        </div>
    </div>

    @foreach(var job in jobs)
    {
        <div class="event">
            
            <input class="startDate" value="@job.CalendarStart" type="hidden"/>


            <input class="endDate" value="@job.CalendarEnd" type="hidden" />


            <input class="client" value="@job.Firstname @job.Lastname" type="hidden" />


        </div>
    }

    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.0/main.js"></script>
    <script src="https://apis.google.com/js/api.js"></script>
    <script>

        var sidebar = document.getElementById("sb-dash");
        var content = document.getElementById("cont");

        function expandSidebar() {
            sidebar.style.height = content.style.height;
            console.log("ello");
        }

        expandSidebar();

        // Client ID and API key from the Developer Console
        var CLIENT_ID = '809767339812-5tl6bjk2ehj2kl2n8c2jkjafs5388qkv.apps.googleusercontent.com';
        var API_KEY = 'AIzaSyC7VsB75n8Zg92QqQZVJziCz2rlplm9JY0';
        var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];
        var SCOPES = "https://www.googleapis.com/auth/calendar.readonly";

        var calendar;

        function handleClientLoad() {
            gapi.load('client:auth2', initClient);
        }

        function initClient() {
            gapi.client.init({
                apiKey: API_KEY,
                clientId: CLIENT_ID,
                discoveryDocs: DISCOVERY_DOCS,
                scope: SCOPES
            }).then(function () {
                loadCalendar();
            });
        }

        function loadCalendar() {
            console.log('Calendar initializing...');
            var calendarEl = document.getElementById('calendar');
            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                editable: true,
                selectable: true,
                select: function (info) {
                    showForm(info);
                },
                events: function (info, successCallback, failureCallback) {
                    gapi.client.calendar.events.list({
                        'calendarId': 'primary',
                        'timeMin': (new Date()).toISOString(),
                        'showDeleted': false,
                        'singleEvents': true,
                        'maxResults': 10,
                        'orderBy': 'startTime'
                    }).then(function (response) {
                        var events = response.result.items;
                        var calendarEvents = events.map(function (event) {
                            return {
                                title: event.summary,
                                start: event.start.dateTime || event.start.date
                            };
                        });
                        successCallback(calendarEvents);
                    }, function (error) {
                        console.error('Error loading Google Calendar events:', error);
                        failureCallback(error);
                    });
                }
            });
            calendar.render();
            console.log('Calendar initialized');
        }

        function showForm(info) {
            var form = document.getElementById('eventForm');
            form.style.display = 'block';
            form.dataset.start = info.startStr;
            form.dataset.end = info.endStr;
        }

        document.getElementById('addEventButton').addEventListener('click', function (e) {
            var eventName = document.getElementById('eventName').value;
            var eventDate = document.getElementById('eventDate').value;
            var calendarApi = calendar.getApi();
            calendarApi.addEvent({
                title: eventName,
                start: eventDate
            });
            document.getElementById('eventName').value = '';
            document.getElementById('eventDate').value = '';
            document.getElementById('eventForm').style.display = 'none';

            // Re-render the calendar to show the newly added event
            calendar.render();
        });

        function addPredefinedEvents(calendar) {
            var holidays = [
                { title: 'New Year\'s Day', start: '2024-01-01' },
                { title: 'Independence Day', start: '2024-07-04' },
                { title: 'Christmas Day', start: '2024-12-25' }
            ];
            calendar.addEventSource(holidays);
            
            const NodeList = document.querySelectorAll(".event");



            for (let i = 0; i < NodeList.length; i++) {

                var startNode = NodeList[i].querySelectorAll('.startDate');
                var endNode = NodeList[i].querySelectorAll('.endDate');
                var clientNode = NodeList[i].querySelectorAll('.client');
                var start = startNode[0].value;
                var end = endNode[0].value;
                var client = clientNode[0].value;



                console.log(start);
                console.log(i);
                console.log(client);



                
                var job = [
                    { title: client, start: start, end: end }
                    
                    
                ];
                calendar.addEventSource(job);
                
                

            }


        }

        document.addEventListener('DOMContentLoaded', function () {
            handleClientLoad(); // Load the client API

            var calendarEl = document.getElementById('calendar');
            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                editable: true,
                selectable: true,
                select: function (info) {
                    showForm(info);
                }
            });

            addPredefinedEvents(calendar); // Add predefined events
            calendar.render();
        });

    </script>
    <script async defer src="https://apis.google.com/js/api.js"
            onload="this.onload=function(){};handleClientLoad()"
            onreadystatechange="if (this.readyState === 'complete') this.onload()">
    </script>
</body>
</html>